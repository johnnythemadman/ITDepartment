@model IEnumerable<ITDepartment.Models.Task.TaskViewModel>
@using ITDepartment.Models;
@using ITDepartment.Resources;
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    <button class="btn btn-primary" onclick="location.href = '@Url.Action("Create", "Task")'">
        @Text.CreateNew
    </button>
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.TaskName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsDone)
        </th>
        <!-- TODO: SprintEnd-->
        <th>
            @Html.DisplayNameFor(model => model.SprintId)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    var myModal = "modal-container" + item.TaskId;
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.TaskName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsDone)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SprintId)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.TaskId }) |
            @Html.ActionLink("Details", "Details", new { id=item.TaskId }) |
            <a href="#" data-href="@Url.Action("DeleteConfirmation", new { id = item.TaskId})" data-toggle="modal" data-target="#@myModal">Delete</a>
            <div id="@myModal" class="modal fade" tabindex="-1" role="dialog" style="border: 5px solid #3A87AD;">
                @Html.Partial("~/Views/ConfirmationBody.cshtml", new ConfirmationModel { Id = item.TaskId, Name = item.TaskName , ObjectType = "Task", ControllerName = "Task" })
            </div>
        </td>
    </tr>
}

</table>
