@model ITDepartment.Models.Task.TaskDetailsViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Task</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TaskId)

        <div class="form-group">
            @Html.LabelFor(model => model.SprintId, "SprintId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SprintId, new { @class = "form-control", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.SprintId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaskName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TaskName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.TaskName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaskDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.TaskDescription, new { @class = "form-control", rows = 15, @style = "resize: vertical", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.TaskDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.IsDone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="form-check">
                    @Html.EditorFor(model => model.IsDone, htmlAttributes: new { disabled = "disabled"})
                    @Html.ValidationMessageFor(model => model.IsDone, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
}
